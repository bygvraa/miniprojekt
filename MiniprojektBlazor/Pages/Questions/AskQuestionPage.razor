@page "/questions/ask"

@inject HttpClient http
@inject AppDataService service
@inject NavigationManager navigation

<PageTitle>Stil et spørgsmål</PageTitle>

<h3>Stil et spørgsmål</h3>


<div class="card card-askpage bg-lite">
	<EditForm Model="@newQuestion" OnValidSubmit="@CreateQuestion">

		<div class="form-group">
			<label for="Subject" class="col-form-label">
				Emne
			</label>
			<select id="Subject" class="form-control" @bind="SubjectId">
				@if (subjects is not null)
				{
				<option>--- Vælg et emne ---</option>
					@foreach (var subject in subjects)
					{
						<option value="@subject.Id">@subject.Name</option>
					}
				}
			</select>
		</div>

		<div class="form-group">
			<label for="Title" class="col-form-label">
				Overskrift
			</label>
			<InputText id="Title" class="form-control" placeholder="Overskrift på spørgsmålet" 
			@bind-Value="newQuestion.Title" />
		</div>

		<div class="form-group">
			<label for="Text" class="col-form-label">
				Spørgsmål
			</label>
			<InputTextArea id="Text" class="form-control" placeholder="Skriv dit spørgsmål" 
			@bind-Value="newQuestion.Text" />
		</div>

		<div class="form-group">
			<label for="Username" class="col-form-label">
				Navn
			</label>
			<InputText id="Username" class="form-control" placeholder="Skriv dit navn" 
			@bind-Value="newQuestion.Username" />
		</div>

		<button type="submit" class="btn btn-qna btn-submit">
			Send
		</button>

	</EditForm>
</div>


@code {
	private int SubjectId;
	private SubjectData[]? subjects;
	public QuestionData newQuestion = new() { };

	protected override async Task OnInitializedAsync()
	{
		subjects = await service.GetSubjects();
	}

	private async Task CreateQuestion()
	{
		var _subject = await service.GetSubjectById(SubjectId);

		newQuestion.Subject = _subject!;

		await service.CreateQuestion(newQuestion);

		navigation.NavigateTo("questions");
	}

}
